---
- name: create group
  group:
    name: "{{ user }}"
    state: present
  sudo: yes

- name: ensure sudoers.d is enabled
  lineinfile:
    dest: "/etc/sudoers"
    state: present
    backup: yes
    regexp: "^#includedir /etc/sudoers.d"
    line: "#includedir /etc/sudoers.d"
  sudo: yes

- name: set up password-less sudo for group
  template:
    src: "sudoers.j2"
    dest: "/etc/sudoers.d/{{ user }}"
    owner: root
    group: root
    mode: 0440
  sudo: yes

- name: create user
  user:
    name: "{{ user }}"
    home: "/home/{{ user }}"
    createhome: yes
    state: present
    shell: "/bin/bash"
    group: "{{ user }}"
  sudo: yes

- name: take ownership of /tmp
  file:
    path: /tmp
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
  sudo: yes

- name: take ownership of /srv/apps
  file:
    path: "/srv/apps"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
  sudo: yes

- name: create ssh dir
  file:
    dest: "/home/{{ user }}/.ssh"
    state: directory
  sudo: yes
  sudo_user: "{{ user }}"

- name: store private key
  template:
    src: "private_key.j2"
    dest: "/home/{{ user }}/.ssh/id_rsa"
    mode: 0600
  sudo: yes
  sudo_user: "{{ user }}"

- name: store public key
  template:
    src: "public_key.j2"
    dest: "/home/{{ user }}/.ssh/id_rsa.pub"
    mode: 0600
  sudo: yes
  sudo_user: "{{ user }}"

- name: copy authorized_keys from root_user
  command:
    cp "/home/{{ root_user }}/.ssh/authorized_keys" "/home/{{ user }}/.ssh/authorized_keys"
  args:
    creates: "/home/{{ user }}/.ssh/authorized_keys"
  sudo: yes
  sudo_user: "{{ user }}"

- name: ensure authorized_keys file permission
  file:
    path: "/home/{{ user }}/.ssh/authorized_keys"
    group: "{{ user }}"
    owner: "{{ user }}"
  sudo: yes

- name: setup logs folder
  file:
    path: "{{ logs_dir }}"
    state: directory
    group: "{{ user }}"
    owner: "{{ user }}"

- include: hostname.yml
